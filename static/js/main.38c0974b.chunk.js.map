{"version":3,"sources":["components/GlobalStyles.js","components/Game.js","components/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Game","level","useState","cards","setCards","clicks","setClicks","rows","cols","cardsAmount","useEffect","init","setTimeout","prevState","map","card","visible","clickHandler","newCards","generateCards","appendColorsToCards","result","i","push","id","active","background","ids","randomCard1","Math","floor","random","length","randomCardId1","filter","item","index","randomCard2","randomCardId2","color","generateColor","r","g","b","e","currentClicks","newCardsState","target","checkAreCardsEqual","visibleCards","Wrapper","Card","size","bgColor","className","onClick","undefined","styled","div","props","levels","1","2","3","4","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38c0974b.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: Open-Sans, Helvetica, Sans-Serif;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Game({ level }) {\r\n  const [cards, setCards] = useState([]);\r\n  const [clicks, setClicks] = useState(0);\r\n  const { rows, cols } = level;\r\n  const cardsAmount = rows * cols;\r\n\r\n  useEffect(() => {\r\n    init();\r\n    setTimeout(() => {\r\n      setCards((prevState) =>\r\n        prevState.map((card) => ({\r\n          ...card,\r\n          visible: false,\r\n          clickHandler: true,\r\n        }))\r\n      );\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const init = () => {\r\n    const newCards = generateCards();\r\n    appendColorsToCards(newCards);\r\n    setCards(newCards);\r\n  };\r\n\r\n  const generateCards = () => {\r\n    const result = [];\r\n    for (let i = 0; i < cardsAmount; i++) {\r\n      result.push({\r\n        id: i,\r\n        visible: true,\r\n        clickHandler: false,\r\n        active: true,\r\n        background: \"\",\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const appendColorsToCards = (cards) => {\r\n    let ids = cards;\r\n    for (let i = 0; i < cardsAmount / 2; i++) {\r\n      const randomCard1 = Math.floor(Math.random() * ids.length);\r\n      const randomCardId1 = ids[randomCard1].id;\r\n      ids = ids.filter((item, index) => index !== randomCard1);\r\n      const randomCard2 = Math.floor(Math.random() * ids.length);\r\n      const randomCardId2 = ids[randomCard2].id;\r\n      ids = ids.filter((item, index) => index !== randomCard2);\r\n      const color = generateColor();\r\n      cards[randomCardId1].background = color;\r\n      cards[randomCardId2].background = color;\r\n    }\r\n  };\r\n\r\n  const generateColor = () => {\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n\r\n  const clickHandler = (e) => {\r\n    const currentClicks = clicks + 1;\r\n    const newCardsState = cards.map((card) => {\r\n      if (card.id == e.target.id) {\r\n        return { ...card, visible: true, clickHandler: false };\r\n      } else {\r\n        return card;\r\n      }\r\n    });\r\n\r\n    if (currentClicks === 1 || currentClicks === 2) {\r\n      setClicks(currentClicks);\r\n      setCards(newCardsState);\r\n      currentClicks === 2 && checkAreCardsEqual(newCardsState);\r\n    }\r\n  };\r\n\r\n  const checkAreCardsEqual = (newCardsState) => {\r\n    const visibleCards = newCardsState.filter((card) => card.visible);\r\n    const result =\r\n      visibleCards[0].background === visibleCards[1].background ? true : false;\r\n\r\n    setTimeout(() => {\r\n      setCards(\r\n        newCardsState.map((card) => {\r\n          if (card.visible && result) {\r\n            return {\r\n              ...card,\r\n              clickHandler: false,\r\n              visible: false,\r\n              active: false,\r\n            };\r\n          } else if (card.visible && !result) {\r\n            return { ...card, clickHandler: true, visible: false };\r\n          } else {\r\n            return card;\r\n          }\r\n        })\r\n      );\r\n      setClicks(0);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {cards.map((card) => (\r\n        <Card\r\n          key={card.id}\r\n          id={card.id}\r\n          size={cols}\r\n          bgColor={\r\n            !card.active\r\n              ? \"rgba(0, 0, 0, 0.7)\"\r\n              : !card.visible\r\n              ? \"gray\"\r\n              : card.background\r\n          }\r\n          className={card.visible && \"visible\"}\r\n          onClick={card.clickHandler ? clickHandler : undefined}\r\n        />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  cursor: pointer;\r\n  flex-basis: ${(props) => 100 / props.size}%;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  border: 4px solid white;\r\n  border-radius: 10px;\r\n  transform: rotate3d(0, 1, 0, 0deg);\r\n  transition: transform 0.4s linear, background-color 0s linear 0.2s;\r\n  background-color: ${(props) => props.bgColor};\r\n  &.visible {\r\n    transform: rotate3d(0, 1, 0, 180deg);\r\n  }\r\n`;\r\n","import React from \"react\";\nimport GlobalStyle from \"./GlobalStyles\";\nimport Game from \"./Game\";\n\nconst levels = {\n  1: {\n    rows: 2,\n    cols: 2,\n  },\n  2: {\n    rows: 2,\n    cols: 3,\n  },\n  3: {\n    rows: 3,\n    cols: 4,\n  },\n  4: {\n    rows: 4,\n    cols: 4,\n  },\n};\n\nfunction App() {\n  return (\n    <div className='App'>\n      <GlobalStyle />\n      <Game level={levels[\"1\"]} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}