{"version":3,"sources":["components/GlobalStyles.js","components/withScale.js","assets/rectangleBtn.png","assets/rectangleBtnHover.png","assets/title.png","components/UI/Button.js","components/Home.js","data/levelsData.js","assets/result-screen-win.png","assets/squareBtn.png","assets/squareBtnHover.png","components/Modal.js","components/Game.js","assets/levelselectscreen.png","components/SelectLevel.js","components/Scores.js","components/NotFound.js","components/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","withScale","WrappedComponent","props","useState","scale","Math","min","window","innerWidth","width","innerHeight","height","setScale","useEffect","addEventListener","calculateScale","removeEventListener","e","Button","styled","button","variant","image","hoverImage","value","error","textField","setTextField","useContext","PlayerContext","player","setUserData","resetData","history","useHistory","progress","filter","item","passed","length","Page","Wrapper","Title","nickname","Text","Navigation","rectangleBtn","rectangleBtnHover","onClick","push","Input","type","placeholder","onChange","target","onBlur","formattedValue","trim","charAt","toUpperCase","slice","div","HomeScreen","h1","input","p","levelsData","lev1","rows","cols","lev2","lev3","lev4","lev5","lev6","level","score","updatedProgressArray","map","Number","available","Content","squareBtn","squareBtnHover","resultScreen","Game","cards","setCards","clicks","setClicks","gameEnd","setGameEnd","useParams","cardsAmount","playTime","useRef","init","setTimeout","prevState","card","visible","clickHandler","current","startTime","Date","getTime","newCards","generateCards","appendColorsToCards","result","i","id","active","background","ids","randomCard1","floor","random","randomCardId1","index","randomCard2","randomCardId2","color","generateColor","r","g","b","currentClicks","stateWithVisibleCards","checkAreCardsEqual","onlyVisibleCards","stateAfterCompare","handleGameEnd","endTime","Card","size","bgColor","className","undefined","goToGame","Levels","amount","ceil","disabled","LevelSelectScreen","goBack","Table","table","timer","setTimer","intervalRef","setInterval","console","log","currentState","clearInterval","to","React","createContext","initialPlayerData","App","data","JSON","parse","localStorage","getItem","setPlayer","Provider","newState","setItem","stringify","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d932904c.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Poppins', sans-serif;\r\n    user-select: none;\r\n    user-drag: none;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst withScale = (WrappedComponent) => {\r\n  const WithScale = (props) => {\r\n    const [scale, setScale] = useState(() => {\r\n      const scale = Math.min(\r\n        window.innerWidth / props.width,\r\n        window.innerHeight / props.height\r\n      );\r\n      return scale > 1 ? 1 : scale;\r\n    });\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"resize\", calculateScale);\r\n      return () => {\r\n        window.removeEventListener(\"resize\", calculateScale);\r\n      };\r\n    }, []);\r\n\r\n    const calculateScale = (e) => {\r\n      const scale = Math.min(\r\n        window.innerWidth / props.width,\r\n        window.innerHeight / props.height\r\n      );\r\n      setScale(scale > 1 ? 1 : scale);\r\n    };\r\n\r\n    return <WrappedComponent {...props} scale={scale} />;\r\n  };\r\n\r\n  return WithScale;\r\n};\r\n\r\nexport default withScale;\r\n","export default __webpack_public_path__ + \"static/media/rectangleBtn.197dcec7.png\";","export default __webpack_public_path__ + \"static/media/rectangleBtnHover.857a97a4.png\";","export default __webpack_public_path__ + \"static/media/title.c26b316f.png\";","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  width: ${({ variant }) => {\r\n    switch (true) {\r\n      case variant === \"square\":\r\n        return \"176px\";\r\n      case variant === \"rectangle\":\r\n        return \"242px\";\r\n    }\r\n  }};\r\n  height: ${({ variant }) => {\r\n    switch (true) {\r\n      case variant === \"square\":\r\n        return \"176px\";\r\n      case variant === \"rectangle\":\r\n        return \"118.7px\";\r\n    }\r\n  }};\r\n  background-image: ${({ image }) => `url(${image})`};\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 50px;\r\n  font-weight: bold;\r\n  color: #af753b;\r\n  text-shadow: 0px 0px 2px black;\r\n  transition: background-image 0.2s linear;\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n    background-image: ${({ hoverImage }) => `url(${hoverImage})`};\r\n  }\r\n\r\n  :disabled {\r\n    filter: grayscale(1);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PlayerContext } from \"./App\";\r\nimport withScale from \"./withScale\";\r\nimport rectangleBtn from \"./../assets/rectangleBtn.png\";\r\nimport rectangleBtnHover from \"./../assets/rectangleBtnHover.png\";\r\nimport HomeScreen from \"./../assets/title.png\";\r\nimport Button from \"./UI/Button\";\r\n\r\nconst Home = ({ scale }) => {\r\n  const [textField, setTextField] = useState({ value: \"\", error: false });\r\n  const { player, setUserData, resetData } = useContext(PlayerContext);\r\n  const history = useHistory();\r\n  const progress = player.progress.filter((item) => item.passed).length;\r\n\r\n  const goToSelectLevel = () => {\r\n    history.push(\"/levels\");\r\n  };\r\n\r\n  const goToScores = () => {\r\n    history.push(\"/scores\");\r\n  };\r\n\r\n  const formatter = () => {\r\n    const formattedValue =\r\n      textField.value.trim().charAt(0).toUpperCase() +\r\n      textField.value.trim().slice(1);\r\n\r\n    formattedValue\r\n      ? setTextField({ value: formattedValue, error: false })\r\n      : setTextField({ value: formattedValue, error: true });\r\n  };\r\n\r\n  const addUserNickname = () => {\r\n    if (textField.value) {\r\n      setTextField({ ...textField, error: false });\r\n      setUserData({ ...player, nickname: textField.value });\r\n    } else {\r\n      setTextField({ ...textField, error: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Wrapper scale={scale}>\r\n        <Title>\r\n          <span>M</span>emory&nbsp;<span>G</span>ame\r\n        </Title>\r\n        {player.nickname ? (\r\n          <>\r\n            <Text>Gracz: {player.nickname}</Text>\r\n            <Text>Postęp: {progress}/6</Text>\r\n            <Navigation>\r\n              <Button\r\n                variant='rectangle'\r\n                image={rectangleBtn}\r\n                hoverImage={rectangleBtnHover}\r\n                onClick={goToSelectLevel}\r\n              >\r\n                START\r\n              </Button>\r\n              <Button\r\n                variant='rectangle'\r\n                image={rectangleBtn}\r\n                hoverImage={rectangleBtnHover}\r\n                onClick={resetData}\r\n              >\r\n                RESET\r\n              </Button>\r\n              <Button\r\n                variant='rectangle'\r\n                image={rectangleBtn}\r\n                hoverImage={rectangleBtnHover}\r\n                onClick={goToScores}\r\n              >\r\n                WYNIKI\r\n              </Button>\r\n            </Navigation>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Input\r\n              type='text'\r\n              placeholder='Wpisz swój nick...'\r\n              value={textField.value}\r\n              error={textField.error}\r\n              onChange={(e) =>\r\n                setTextField({ ...textField, value: e.target.value })\r\n              }\r\n              onBlur={formatter}\r\n            />\r\n            <Button\r\n              variant='rectangle'\r\n              image={rectangleBtn}\r\n              hoverImage={rectangleBtnHover}\r\n              onClick={addUserNickname}\r\n            >\r\n              OK\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default withScale(Home);\r\n\r\nconst Page = styled.div`\r\n  background: radial-gradient(rgba(43, 55, 96, 1), rgba(11, 16, 35, 1));\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 1273px;\r\n  height: 716px;\r\n  transform: ${({ scale }) => `translate(-50%, -50%) scale(${scale})`};\r\n  background-image: ${`url(${HomeScreen})`};\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & * {\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst Navigation = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 80px;\r\n  letter-spacing: 1px;\r\n  color: #af753b;\r\n  text-shadow: 0px 0px 2px black;\r\n  span {\r\n    color: #94bd00;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 363px;\r\n  height: 60px;\r\n  border: ${(props) =>\r\n    props.error ? \"6px solid #AE3328\" : \"6px solid #af753b\"};\r\n  border-radius: 12px;\r\n  background: transparent;\r\n  padding: 10px 5px;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #c58662;\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 10px #ffff04;\r\n  }\r\n  ::placeholder {\r\n    color: #c58662;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  color: #af753b;\r\n  text-shadow: 0px 0px 1px black;\r\n`;\r\n","const levelsData = {\r\n  lev1: {\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  lev2: {\r\n    rows: 2,\r\n    cols: 3,\r\n  },\r\n  lev3: {\r\n    rows: 3,\r\n    cols: 4,\r\n  },\r\n  lev4: {\r\n    rows: 4,\r\n    cols: 4,\r\n  },\r\n  lev5: {\r\n    rows: 5,\r\n    cols: 4,\r\n  },\r\n  lev6: {\r\n    rows: 6,\r\n    cols: 4,\r\n  },\r\n};\r\n\r\nexport default levelsData;\r\n","export default __webpack_public_path__ + \"static/media/result-screen-win.feff81c6.png\";","export default __webpack_public_path__ + \"static/media/squareBtn.c089b3bb.png\";","export default __webpack_public_path__ + \"static/media/squareBtnHover.2e9da042.png\";","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PlayerContext } from \"./App\";\r\nimport withScale from \"./withScale\";\r\nimport resultScreen from \"./../assets/result-screen-win.png\";\r\nimport Button from \"./UI/Button\";\r\nimport squareBtn from \"./../assets/squareBtn.png\";\r\nimport squareBtnHover from \"./../assets/squareBtnHover.png\";\r\n\r\nconst Modal = ({ scale, level, score }) => {\r\n  const { player, setUserData } = useContext(PlayerContext);\r\n  const { push } = useHistory();\r\n  const updatedProgressArray = player.progress.map((item) => {\r\n    if (item.level === Number(level)) {\r\n      return { ...item, passed: true, score: score };\r\n    } else if (item.level === Number(level) + 1) {\r\n      return { ...item, available: true };\r\n    } else {\r\n      return item;\r\n    }\r\n  });\r\n\r\n  const clickHandler = () => {\r\n    setUserData({ ...player, progress: updatedProgressArray });\r\n    push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Wrapper scale={scale}>\r\n        <Content>\r\n          <Title>Gratulacje!</Title>\r\n          <Text>Poziom {level} został ukończony</Text>\r\n          <Text>Twój wynik to: {score}</Text>\r\n          <Button\r\n            onClick={clickHandler}\r\n            variant={\"square\"}\r\n            image={squareBtn}\r\n            hoverImage={squareBtnHover}\r\n          >\r\n            OK\r\n          </Button>\r\n        </Content>\r\n      </Wrapper>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default withScale(Modal);\r\n\r\nconst Page = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 612px;\r\n  height: 884px;\r\n  transform: ${({ scale }) => `translate(-50%, -50%) scale(${scale})`};\r\n  background-image: ${`url(${resultScreen})`};\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  bottom: 10%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & * {\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 70px;\r\n  letter-spacing: 1px;\r\n  color: #af753b;\r\n  text-shadow: 0px 0px 2px black;\r\n  span {\r\n    color: #94bd00;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  color: #af753b;\r\n  text-shadow: 0px 0px 1px black;\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport levelsData from \"./../data/levelsData\";\r\nimport Modal from \"./Modal\";\r\n\r\nfunction Game() {\r\n  const [cards, setCards] = useState([]);\r\n  const [clicks, setClicks] = useState(0);\r\n  const [gameEnd, setGameEnd] = useState(false);\r\n  const { level } = useParams();\r\n  const { rows, cols } = levelsData[`lev${level}`];\r\n  const cardsAmount = rows * cols;\r\n  const playTime = useRef(null);\r\n\r\n  useEffect(() => {\r\n    init();\r\n    setTimeout(() => {\r\n      setCards((prevState) =>\r\n        prevState.map((card) => ({\r\n          ...card,\r\n          visible: false,\r\n          clickHandler: true,\r\n        }))\r\n      );\r\n      playTime.current = { startTime: new Date().getTime() };\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const init = () => {\r\n    const newCards = generateCards();\r\n    appendColorsToCards(newCards);\r\n    setCards(newCards);\r\n  };\r\n\r\n  const generateCards = () => {\r\n    const result = [];\r\n    for (let i = 0; i < cardsAmount; i++) {\r\n      result.push({\r\n        id: i,\r\n        visible: true,\r\n        clickHandler: false,\r\n        active: true,\r\n        background: \"\",\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const appendColorsToCards = (cards) => {\r\n    let ids = cards;\r\n    for (let i = 0; i < cardsAmount / 2; i++) {\r\n      const randomCard1 = Math.floor(Math.random() * ids.length);\r\n      const randomCardId1 = ids[randomCard1].id;\r\n      ids = ids.filter((item, index) => index !== randomCard1);\r\n      const randomCard2 = Math.floor(Math.random() * ids.length);\r\n      const randomCardId2 = ids[randomCard2].id;\r\n      ids = ids.filter((item, index) => index !== randomCard2);\r\n      const color = generateColor();\r\n      cards[randomCardId1].background = color;\r\n      cards[randomCardId2].background = color;\r\n    }\r\n  };\r\n\r\n  const generateColor = () => {\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n\r\n  const clickHandler = (e) => {\r\n    const currentClicks = clicks + 1;\r\n    const stateWithVisibleCards = cards.map((card) => {\r\n      if (card.id == e.target.id) {\r\n        return { ...card, visible: true, clickHandler: false };\r\n      } else {\r\n        return card;\r\n      }\r\n    });\r\n\r\n    if (currentClicks === 1 || currentClicks === 2) {\r\n      setClicks(currentClicks);\r\n      setCards(stateWithVisibleCards);\r\n      currentClicks === 2 && checkAreCardsEqual(stateWithVisibleCards);\r\n    }\r\n  };\r\n\r\n  const checkAreCardsEqual = (stateWithVisibleCards) => {\r\n    const onlyVisibleCards = stateWithVisibleCards.filter(\r\n      (card) => card.visible\r\n    );\r\n    const result =\r\n      onlyVisibleCards[0].background === onlyVisibleCards[1].background\r\n        ? true\r\n        : false;\r\n\r\n    setTimeout(() => {\r\n      const stateAfterCompare = stateWithVisibleCards.map((card) => {\r\n        if (card.visible && result) {\r\n          return {\r\n            ...card,\r\n            clickHandler: false,\r\n            visible: false,\r\n            active: false,\r\n          };\r\n        } else if (card.visible && !result) {\r\n          return { ...card, clickHandler: true, visible: false };\r\n        } else {\r\n          return card;\r\n        }\r\n      });\r\n\r\n      setCards(stateAfterCompare);\r\n      setClicks(0);\r\n      const activeCards = stateAfterCompare.filter((card) => card.active);\r\n      !activeCards.length && handleGameEnd();\r\n    }, 1000);\r\n  };\r\n\r\n  const handleGameEnd = () => {\r\n    playTime.current.endTime = new Date().getTime();\r\n    playTime.current.score =\r\n      (playTime.current.endTime - playTime.current.startTime) / 1000;\r\n    setTimeout(() => setGameEnd(true), 400);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {cards.map((card) => (\r\n        <Card\r\n          key={card.id}\r\n          id={card.id}\r\n          size={cols}\r\n          bgColor={\r\n            !card.active\r\n              ? \"rgba(0, 0, 0, 0.7)\"\r\n              : !card.visible\r\n              ? \"gray\"\r\n              : card.background\r\n          }\r\n          className={card.visible && \"visible\"}\r\n          onClick={card.clickHandler ? clickHandler : undefined}\r\n        />\r\n      ))}\r\n      {gameEnd && (\r\n        <Modal\r\n          width={712}\r\n          height={984}\r\n          level={level}\r\n          score={playTime.current.score}\r\n        />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  cursor: pointer;\r\n  flex-basis: ${(props) => 100 / props.size}%;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  border: 4px solid white;\r\n  border-radius: 10px;\r\n  transform: rotate3d(0, 1, 0, 0deg);\r\n  transition: transform 0.4s linear, background-color 0s linear 0.2s;\r\n  background-color: ${(props) => props.bgColor};\r\n  &.visible {\r\n    transform: rotate3d(0, 1, 0, 180deg);\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/levelselectscreen.a4eb90f8.png\";","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PlayerContext } from \"./App\";\r\nimport withScale from \"./withScale\";\r\nimport LevelSelectScreen from \"./../assets/levelselectscreen.png\";\r\nimport squareBtn from \"./../assets/squareBtn.png\";\r\nimport squareBtnHover from \"./../assets/squareBtnHover.png\";\r\nimport Button from \"./UI/Button\";\r\n\r\nconst SelectLevel = ({ scale }) => {\r\n  const history = useHistory();\r\n  const { player } = useContext(PlayerContext);\r\n\r\n  const goToGame = (e) => {\r\n    history.push(`/game/${e.target.id}`);\r\n  };\r\n  return (\r\n    <Page>\r\n      <Wrapper scale={scale}>\r\n        <Levels amount={Math.ceil(player.progress.length / 2)}>\r\n          {player.progress.map((level, index) => (\r\n            <Button\r\n              key={level.level}\r\n              id={level.level}\r\n              onClick={player.progress[index].available ? goToGame : undefined}\r\n              variant={\"square\"}\r\n              image={squareBtn}\r\n              hoverImage={squareBtnHover}\r\n              disabled={!player.progress[index].available}\r\n            >\r\n              {level.level}\r\n            </Button>\r\n          ))}\r\n        </Levels>\r\n      </Wrapper>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default withScale(SelectLevel);\r\n\r\nconst Page = styled.div`\r\n  background: radial-gradient(rgba(43, 55, 96, 1), rgba(11, 16, 35, 1));\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 1273px;\r\n  height: 716px;\r\n  transform: ${({ scale }) => `translate(-50%, -50%) scale(${scale})`};\r\n  background-image: ${`url(${LevelSelectScreen})`};\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Levels = styled.div`\r\n  width: ${(props) => props.amount * 176}px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport withScale from \"./withScale\";\r\nimport HomeScreen from \"./../assets/title.png\";\r\nimport { PlayerContext } from \"./App\";\r\nimport Button from \"./UI/Button\";\r\nimport rectangleBtn from \"./../assets/rectangleBtn.png\";\r\nimport rectangleBtnHover from \"./../assets/rectangleBtnHover.png\";\r\n\r\nconst Scores = ({ scale }) => {\r\n  const { goBack } = useHistory();\r\n  const { player } = useContext(PlayerContext);\r\n  return (\r\n    <Page>\r\n      <Wrapper scale={scale}>\r\n        <Title>Wyniki</Title>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Level</th>\r\n              <th>Wynik</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {player.progress.map((item) => (\r\n              <tr key={item.level}>\r\n                <td>{item.level}</td>\r\n                <td>{item.score ? item.score : \"Level niezaliczony\"}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Button\r\n          variant='rectangle'\r\n          image={rectangleBtn}\r\n          hoverImage={rectangleBtnHover}\r\n          onClick={goBack}\r\n        >\r\n          Wróć\r\n        </Button>\r\n      </Wrapper>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default withScale(Scores);\r\n\r\nconst Page = styled.div`\r\n  background: radial-gradient(rgba(43, 55, 96, 1), rgba(11, 16, 35, 1));\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 1273px;\r\n  height: 716px;\r\n  transform: ${({ scale }) => `translate(-50%, -50%) scale(${scale})`};\r\n  background-image: ${`url(${HomeScreen})`};\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & * {\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst Table = styled.table`\r\n  text-align: center;\r\n  border-collapse: collapse;\r\n  th,\r\n  td {\r\n    border: 1px solid black;\r\n    padding: 5px 10px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 80px;\r\n  letter-spacing: 1px;\r\n  color: #af753b;\r\n  text-shadow: 0px 0px 2px black;\r\n  span {\r\n    color: #94bd00;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport withScale from \"./withScale\";\r\nimport HomeScreen from \"./../assets/title.png\";\r\n\r\nconst NotFound = ({ scale }) => {\r\n  const [timer, setTimer] = useState(10);\r\n\r\n  const intervalRef = useRef(null);\r\n  useEffect(() => {\r\n    intervalRef.current = setInterval(() => {\r\n      console.log(\"interval\");\r\n      setTimer((currentState) => currentState - 1);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Page>\r\n      <Wrapper scale={scale}>\r\n        <Title>\r\n          <span>404</span>\r\n          <br />\r\n          page not found\r\n        </Title>\r\n        <Text>Przekierowanie nastąpi automatycznie za {timer} sekund.</Text>\r\n      </Wrapper>\r\n      {timer === 0 && <Redirect to='/' />}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default withScale(NotFound);\r\n\r\nconst Page = styled.div`\r\n  background: radial-gradient(rgba(43, 55, 96, 1), rgba(11, 16, 35, 1));\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 1273px;\r\n  height: 716px;\r\n  transform: ${({ scale }) => `translate(-50%, -50%) scale(${scale})`};\r\n  background-image: ${`url(${HomeScreen})`};\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & * {\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 80px;\r\n  letter-spacing: 1px;\r\n  color: #af753b;\r\n  text-shadow: 0px 0px 2px black;\r\n  text-align: center;\r\n  span {\r\n    color: #9e1515;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 28px;\r\n  font-weight: 500;\r\n  color: #af753b;\r\n  text-shadow: 0px 0px 1px black;\r\n`;\r\n","import React, { useState } from \"react\";\nimport GlobalStyle from \"./GlobalStyles\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Game from \"./Game\";\nimport SelectLevel from \"./SelectLevel\";\nimport Scores from \"./Scores\";\nimport NotFound from \"./NotFound\";\n\nexport const PlayerContext = React.createContext();\n\nconst initialPlayerData = {\n  nickname: \"\",\n  progress: [\n    {\n      level: 1,\n      passed: false,\n      score: null,\n      available: true,\n    },\n    {\n      level: 2,\n      passed: false,\n      score: null,\n      available: false,\n    },\n    {\n      level: 3,\n      passed: false,\n      score: null,\n      available: false,\n    },\n    {\n      level: 4,\n      passed: false,\n      score: null,\n      available: false,\n    },\n    {\n      level: 5,\n      passed: false,\n      score: null,\n      available: false,\n    },\n    {\n      level: 6,\n      passed: false,\n      score: null,\n      available: false,\n    },\n  ],\n};\n\nconst App = () => {\n  const [player, setPlayer] = useState(() => {\n    const data = JSON.parse(localStorage.getItem(\"rmg-user-data\"));\n    return data ? data : initialPlayerData;\n  });\n\n  const setUserData = (newState) => {\n    localStorage.setItem(\"rmg-user-data\", JSON.stringify(newState));\n    setPlayer(newState);\n  };\n\n  const resetData = () => {\n    localStorage.setItem(\"rmg-user-data\", JSON.stringify(initialPlayerData));\n    setPlayer(initialPlayerData);\n  };\n\n  return (\n    <PlayerContext.Provider value={{ player, setUserData, resetData }}>\n      <Router>\n        <GlobalStyle />\n        <Switch>\n          <Route path='/levels'>\n            <SelectLevel player={player} width={1273} height={716} />\n          </Route>\n          <Route path='/game/:level'>\n            <Game />\n          </Route>\n          <Route path='/scores'>\n            <Scores width={1273} height={716} />\n          </Route>\n          <Route exact path='/'>\n            <Home width={1273} height={716} />\n          </Route>\n          <Route>\n            <NotFound width={1273} height={716} />\n          </Route>\n        </Switch>\n      </Router>\n    </PlayerContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}